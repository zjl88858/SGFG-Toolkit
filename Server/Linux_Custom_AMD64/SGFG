#!/bin/bash
# Author:Turmi
# License:WTFPLv2
# Version:v1.0.0

function GOSTTLSD() {
 killall brook
 killall gost
 killall pingtunnel
 PWD1=$(echo $RANDOM|md5sum|cut -c 1-6)
 PWD2=$(cat /dev/urandom | sed -e 's/[^a-zA-Z0-9]//g' | strings -n 6 | head -n 1)
 PORT1=$(cat /proc/sys/kernel/random/uuid |tr -d "a-zA-Z-67890" | cut -c 1-1)
 PORT2=$(cat /proc/sys/kernel/random/uuid |tr -d "a-zA-Z-" | cut -c 1-4)
 SIP=$(curl ifconfig.me)
 nohup /usr/sgfg/gost -L="tls://sgfg:$PWD1$PWD2@:$PORT1$PORT2?cert=/usr/sgfg/server.pem&key=/usr/sgfg/server-key.pem" &
 str=$"\n"
 sstr=$(echo -e $str)
 echo $sstr
 clear
 echo -e Start "\033[36;1mSGFG Toolkit\033[39;0m" Success!
 echo Input Server Config Below To Toolkit Setting:
 echo Core:Gost
 echo Config:
 echo "-L http://:1082 -F tls://sgfg:$PWD1$PWD2@$SIP:$PORT1$PORT2"
 exit 0
}

function GOSTWSSD() {
 killall brook
 killall gost
 killall pingtunnel
 PWD1=$(echo $RANDOM|md5sum|cut -c 1-6)
 PWD2=$(cat /dev/urandom | sed -e 's/[^a-zA-Z0-9]//g' | strings -n 6 | head -n 1)
 SIP=$(curl ifconfig.me)
 nohup /usr/sgfg/gost -L="wss://sgfg:$PWD1$PWD2@:443?cert=/usr/sgfg/server.pem&key=/usr/sgfg/server-key.pem" &
 str=$"\n"
 sstr=$(echo -e $str)
 echo $sstr
 clear
 echo -e Start "\033[36;1mSGFG Toolkit\033[39;0m" Success!
 echo Input Server Config Below To Toolkit Setting:
 echo Core:Gost
 echo Config:
 echo "-L http://:1082 -F wss://sgfg:$PWD1$PWD2@$SIP:443"
 exit 0
}

function GOSTKCPD() {
 killall brook
 killall gost
 killall pingtunnel
 PWD1=$(echo $RANDOM|md5sum|cut -c 1-6)
 PWD2=$(cat /dev/urandom | sed -e 's/[^a-zA-Z0-9]//g' | strings -n 6 | head -n 1)
 PORT1=$(cat /proc/sys/kernel/random/uuid |tr -d "a-zA-Z-67890" | cut -c 1-1)
 PORT2=$(cat /proc/sys/kernel/random/uuid |tr -d "a-zA-Z-" | cut -c 1-4)
 SIP=$(curl ifconfig.me)
 cat >/usr/sgfg/kcp.conf <<EOF
{
    "key": "sgfg",
    "crypt": "xtea",
    "mode": "fast",
    "mtu" : 1350,
    "sndwnd": 1024,
    "rcvwnd": 1024,
    "datashard": 10,
    "parityshard": 3,
    "dscp": 0,
    "nocomp": false,
    "acknodelay": false,
    "nodelay": 0,
    "interval": 40,
    "resend": 0,
    "nc": 0,
    "sockbuf": 4194304,
    "keepalive": 10,
    "snmplog": "",
    "snmpperiod": 60,
    "tcp": false
}
EOF
 nohup /usr/sgfg/gost -L="kcp://sgfg:$PWD1$PWD2@:$PORT1$PORT2?c=/usr/sgfg/kcp.conf" &
 str=$"\n"
 sstr=$(echo -e $str)
 echo $sstr
 clear
 echo -e Start "\033[36;1mSGFG Toolkit\033[39;0m" Success!
 echo Input Server Config Below To Toolkit Setting:
 echo Core:Gost
 echo Config:
 echo "-L http://:1082 -F kcp://sgfg:$PWD1$PWD2@$SIP:$PORT1$PORT2?c=kcp.conf"
 exit 0
}

function GOSTQUICD() {
 killall brook
 killall gost
 killall pingtunnel
 PWD1=$(echo $RANDOM|md5sum|cut -c 1-6)
 PWD2=$(cat /dev/urandom | sed -e 's/[^a-zA-Z0-9]//g' | strings -n 6 | head -n 1)
 SIP=$(curl ifconfig.me)
 nohup /usr/sgfg/gost -L="quic://sgfg:$PWD1$PWD2@:443?cert=/usr/sgfg/server.pem&key=/usr/sgfg/server-key.pem" &
 str=$"\n"
 sstr=$(echo -e $str)
 echo $sstr
 clear
 echo -e Start "\033[36;1mSGFG Toolkit\033[39;0m" Success!
 echo Input Server Config Below To Toolkit Setting:
 echo Core:Gost
 echo Config:
 echo "-L http://:1082 -F quic://sgfg:$PWD1$PWD2@$SIP:443"
 exit 0
}

function GOSTSSAD() {
 killall brook
 killall gost
 killall pingtunnel
 PWD1=$(echo $RANDOM|md5sum|cut -c 1-6)
 PWD2=$(cat /dev/urandom | sed -e 's/[^a-zA-Z0-9]//g' | strings -n 6 | head -n 1)
 PORT1=$(cat /proc/sys/kernel/random/uuid |tr -d "a-zA-Z-67890" | cut -c 1-1)
 PORT2=$(cat /proc/sys/kernel/random/uuid |tr -d "a-zA-Z-" | cut -c 1-4)
 SIP=$(curl ifconfig.me)
 nohup /usr/sgfg/gost -L="ss://AEAD_AES_256_GCM:$PWD1$PWD2@:$PORT1$PORT2" &
 str=$"\n"
 sstr=$(echo -e $str)
 echo $sstr
 clear
 echo -e Start "\033[36;1mSGFG Toolkit\033[39;0m" Success!
 echo Input Server Config Below To Toolkit Setting:
 echo Core:Gost
 echo Config:
 echo "-L http://:1082 -F ss://AEAD_AES_256_GCM:$PWD1$PWD2@$SIP:$PORT1$PORT2?nodelay=true"
 exit 0
}

function GOSTSSOD() {
 killall brook
 killall gost
 killall pingtunnel
 PWD1=$(echo $RANDOM|md5sum|cut -c 1-6)
 PWD2=$(cat /dev/urandom | sed -e 's/[^a-zA-Z0-9]//g' | strings -n 6 | head -n 1)
 SIP=$(curl ifconfig.me)
 nohup /usr/sgfg/gost -L="ss+otls://rc4-md5:$PWD1$PWD2@:443" &
 str=$"\n"
 sstr=$(echo -e $str)
 echo $sstr
 clear
 echo -e Start "\033[36;1mSGFG Toolkit\033[39;0m" Success!
 echo Input Server Config Below To Toolkit Setting:
 echo Core:Gost
 echo Config:
 echo "-L http://:1082 -F ss+otls://rc4-md5:$PWD1$PWD2@$SIP:443?host=mirrors.tuna.tsinghua.edu.cn"
 exit 0
}

function GOSTSSWSSD() {
 killall brook
 killall gost
 killall pingtunnel
 PWD1=$(echo $RANDOM|md5sum|cut -c 1-6)
 PWD2=$(cat /dev/urandom | sed -e 's/[^a-zA-Z0-9]//g' | strings -n 6 | head -n 1)
 SIP=$(curl ifconfig.me)
 nohup /usr/sgfg/gost -L="ss+wss://rc4-md5:$PWD1$PWD2@:443?cert=/usr/sgfg/server.pem&key=/usr/sgfg/server-key.pem" &
 str=$"\n"
 sstr=$(echo -e $str)
 echo $sstr
 clear
 echo -e Start "\033[36;1mSGFG Toolkit\033[39;0m" Success!
 echo Input Server Config Below To Toolkit Setting:
 echo Core:Gost
 echo Config:
 echo "-L http://:1082 -F ss+wss://rc4-md5:$PWD1$PWD2@$SIP:443"
 exit 0
}

function GOSTSSKCPD() {
 killall brook
 killall gost
 killall pingtunnel
 PWD1=$(echo $RANDOM|md5sum|cut -c 1-6)
 PWD2=$(cat /dev/urandom | sed -e 's/[^a-zA-Z0-9]//g' | strings -n 6 | head -n 1)
 PORT1=$(cat /proc/sys/kernel/random/uuid |tr -d "a-zA-Z-67890" | cut -c 1-1)
 PORT2=$(cat /proc/sys/kernel/random/uuid |tr -d "a-zA-Z-" | cut -c 1-4)
 SIP=$(curl ifconfig.me)
 cat >/usr/sgfg/kcp.conf <<EOF
{
    "key": "sgfg",
    "crypt": "xtea",
    "mode": "fast",
    "mtu" : 1350,
    "sndwnd": 1024,
    "rcvwnd": 1024,
    "datashard": 10,
    "parityshard": 3,
    "dscp": 0,
    "nocomp": false,
    "acknodelay": false,
    "nodelay": 0,
    "interval": 40,
    "resend": 0,
    "nc": 0,
    "sockbuf": 4194304,
    "keepalive": 10,
    "snmplog": "",
    "snmpperiod": 60,
    "tcp": false
}
EOF
 nohup /usr/sgfg/gost -L="ss+kcp://rc4-md5:$PWD1$PWD2@:$PORT1$PORT2?c=/usr/sgfg/kcp.conf" &
 str=$"\n"
 sstr=$(echo -e $str)
 echo $sstr
 clear
 echo -e Start "\033[36;1mSGFG Toolkit\033[39;0m" Success!
 echo Input Server Config Below To Toolkit Setting:
 echo Core:Gost
 echo Config:
 echo "-L http://:1082 -F ss+kcp://rc4-md5:$PWD1$PWD2@$SIP:$PORT1$PORT2?c=kcp.conf"
 exit 0
}

function BROOKTCPD() {
 killall brook
 killall gost
 killall pingtunnel
 PWD1=$(echo $RANDOM|md5sum|cut -c 1-6)
 PWD2=$(cat /dev/urandom | sed -e 's/[^a-zA-Z0-9]//g' | strings -n 6 | head -n 1)
 PORT1=$(cat /proc/sys/kernel/random/uuid |tr -d "a-zA-Z-67890" | cut -c 1-1)
 PORT2=$(cat /proc/sys/kernel/random/uuid |tr -d "a-zA-Z-" | cut -c 1-4)
 SIP=$(curl ifconfig.me)
 nohup /usr/sgfg/brook server -l :$PORT1$PORT2 -p $PWD1$PWD2 &
 str=$"\n"
 sstr=$(echo -e $str)
 echo $sstr
 clear
 echo -e Start "\033[36;1mSGFG Toolkit\033[39;0m" Success!
 echo Input Server Config Below To Toolkit Setting:
 echo Core:Brook
 echo Config:
 echo "client -s $SIP:$PORT1$PORT2 -p $PWD1$PWD2 --socks5 127.0.0.1:1081"
 exit 0
}

function BROOKWSD() {
 killall brook
 killall gost
 killall pingtunnel
 PWD1=$(echo $RANDOM|md5sum|cut -c 1-6)
 PWD2=$(cat /dev/urandom | sed -e 's/[^a-zA-Z0-9]//g' | strings -n 6 | head -n 1)
 SIP=$(curl ifconfig.me)
 nohup /usr/sgfg/brook wsserver -l :80 -p $PWD1$PWD2 &
 str=$"\n"
 sstr=$(echo -e $str)
 echo $sstr
 clear
 echo -e Start "\033[36;1mSGFG Toolkit\033[39;0m" Success!
 echo Input Server Config Below To Toolkit Setting:
 echo Core:Brook
 echo Config:
 echo "wsclient -s ws://$SIP:80 -p $PWD1$PWD2 --socks5 127.0.0.1:1081"
 exit 0
}

function PINGTUNNELD() {
 killall brook
 killall gost
 killall pingtunnel
 SIP=$(curl ifconfig.me)
 PWD=$(cat /proc/sys/kernel/random/uuid |tr -d "a-zA-Z-" | cut -c 1-2)
 nohup /usr/sgfg/pingtunnel -type server -key $PWD  &
 str=$"\n"
 sstr=$(echo -e $str)
 echo $sstr
 clear
 echo -e Start "\033[36;1mSGFG Toolkit\033[39;0m" Success!
 echo Input Server Config Below To Toolkit Setting:
 echo Core:Pingtunnel
 echo Config:
 echo "-type client -l 127.0.0.1:1081 -s $SIP -key $PWD -sock5 1"
 exit 0
}

function GOSTMENU() {
GOPTION=$(whiptail --title "SGFG Menu Dialog" --menu "Choose gost transport protocol:" 15 60 4 \
"1" "TLS" \
"2" "Websocket Secure" \
"3" "KCP" \
"4" "QUIC" \
"5" "Shadowsocks AEAD" \
"6" "Shadowsocks OBFS" \
"7" "Shadowsocks over WSS" \
"8" "Shadowsocks over KCP" 3>&1 1>&2 2>&3)

exitstatus=$?
if [ $exitstatus = 0 ]; then
    if [ $GOPTION = 1 ]; then
    GOSTTLSD
    elif [ $GOPTION = 2 ]; then
    GOSTWSSD
    elif [ $GOPTION = 3 ]; then
    GOSTKCPD
    elif [ $GOPTION = 4 ]; then
    GOSTQUICD
    elif [ $GOPTION = 5 ]; then
    GOSTSSAD
    elif [ $GOPTION = 6 ]; then
    GOSTSSOD
    elif [ $GOPTION = 7 ]; then
    GOSTSSWSSD
    elif [ $GOPTION = 8 ]; then
    GOSTSSKCPD
    fi
else
    echo Aborted.
    exit 0
fi
}

function BROOKMENU() {
BOPTION=$(whiptail --title "SGFG Menu Dialog" --menu "Choose brook transport protocol:" 15 60 4 \
"1" "TCP" \
"2" "Websocket" 3>&1 1>&2 2>&3)

exitstatus=$?
if [ $exitstatus = 0 ]; then
    if [ $BOPTION = 1 ]; then
    BROOKTCPD
    elif [ $BOPTION = 2 ]; then
    BROOKWSD
    fi
else
    echo Aborted.
    exit 0
fi
}


OPTION=$(whiptail --title "SGFG Menu Dialog" --menu "Choose which core u want:" 15 60 4 \
"A" "Gost (more transports)" \
"B" "Brook (more security)" \
"C" "Pingtunnel (ICMP transport)" \
"D" "I don't want choose, Just start NOW!"  3>&1 1>&2 2>&3)
 
exitstatus=$?
if [ $exitstatus = 0 ]; then
    if [ $OPTION = A ]; then
    GOSTMENU
    elif [ $OPTION = B ]; then
    BROOKMENU
    elif [ $OPTION = C ]; then
    PINGTUNNELD
    elif [ $OPTION = D ]; then
    GOSTTLSD
    fi
else
    echo Aborted.
    exit 0
fi


